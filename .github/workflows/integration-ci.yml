name: Integration tests (CI)

on:
  workflow_dispatch: {}

jobs:
  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.PG_USER }} -d ${{ secrets.PG_DB }}" --health-interval=5s --health-timeout=3s --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install -e . || true
          python -m pip install pytest -q

      - name: Start API server
        run: |
          export PYTHONPATH="$GITHUB_WORKSPACE:${PYTHONPATH}"
          export DATABASE_URL="postgresql+psycopg2://${{ secrets.PG_USER }}:${{ secrets.PG_PASSWORD }}@db:5432/${{ secrets.PG_DB }}"
          echo "PYTHONPATH=$PYTHONPATH"
          echo "DATABASE_URL=$DATABASE_URL"
          nohup python -m uvicorn api:app --host 0.0.0.0 --port 8000 --log-level info > uvicorn.log 2>&1 &
          for i in $(seq 1 30); do
            if curl -sS http://127.0.0.1:8000/docs >/dev/null 2>&1; then
              echo "api reachable"
              break
            fi
            sleep 1
          done
          tail -n 200 uvicorn.log || true

      - name: Run integration scripts
        env:
          NAS_FOLDER: ${{ github.workspace }}
          CHROME_BIN: /usr/bin/chromium-browser
        run: |
          if [ -d tests ]; then
            scripts=$(ls tests/integration_test_*.py 2>/dev/null || true)
            if [ -n "$scripts" ]; then
              for s in $scripts; do
                echo "--- Running integration script: $s ---"
                python "$s"
              done
            else
              python -m pytest tests/ -q -k integration
            fi
          else
            python -m pytest -q -k integration
          fi

      - name: Collect server diagnostics
        if: always()
        run: |
          echo "---- process list for python/uvicorn ----" > server-diagnostics.txt
          ps aux | egrep 'uvicorn|python' | egrep -v 'egrep' >> server-diagnostics.txt || true
          echo "---- listening TCP ports (ss -ltnp / netstat) ----" >> server-diagnostics.txt
          ss -ltnp 2>/dev/null || netstat -ltnp 2>/dev/null || true >> server-diagnostics.txt
          echo "---- uvicorn.log (if present) ----" >> server-diagnostics.txt
          if [ -f uvicorn.log ]; then
            echo "(start of uvicorn.log)" >> server-diagnostics.txt
            tail -n 1000 uvicorn.log >> server-diagnostics.txt || true
            echo "(end of uvicorn.log)" >> server-diagnostics.txt
          else
            echo "(no uvicorn.log found)" >> server-diagnostics.txt
          fi

      - name: Upload server diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-diagnostics
          path: server-diagnostics.txt
